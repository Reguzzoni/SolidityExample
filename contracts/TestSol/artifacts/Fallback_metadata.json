{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "gas",
						"type": "uint256"
					}
				],
				"name": "Log",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "fallback is a function that does not take any arguments and does not return anything. It is executed either when a function that does not exist is called or Ether is sent directly to a contract but receive() does not exist or msg.data is not empty fallback has a 2300 gas limit when called by transfer or send.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/TestSol/Fallback.sol": "Fallback"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/TestSol/Fallback.sol": {
			"keccak256": "0xc9b058eecdf2fd71b941823161d5c168e73b38e971ec84e17f1f3706885e7c6e",
			"license": "MIT",
			"urls": [
				"bzz-raw://24948af4c23f13ac8f0d8f3ccfd666ac02c21ea4d1d8eb9ec22ae7c77a1197a4",
				"dweb:/ipfs/QmQjgGBQitHam8QS52gByzmx6MEtgPcyaox72xg9i85PoR"
			]
		}
	},
	"version": 1
}