{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "caller",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "message",
						"type": "string"
					}
				],
				"name": "Received",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_message",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_x",
						"type": "uint256"
					}
				],
				"name": "foo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "call is a low level function to interact with other contracts. This is the recommended method to use when you're just sending Ether via calling the fallback function. However it is not the recommend way to call existing functions.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/TestSol/Call.sol": "Receiver"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/TestSol/Call.sol": {
			"keccak256": "0x19bbf911cdd5c4e459ba4941f8471b4b154df0660669951dcee4be09f60799c2",
			"license": "MIT",
			"urls": [
				"bzz-raw://82bf0020074cbf51a940c110dbeb6f45020b0d62cfb1370b276ba30f188bc170",
				"dweb:/ipfs/QmdUWhEAnnSHnkZmMWukudRNXXy7FRm1TejqhGKFEnHxx9"
			]
		}
	},
	"version": 1
}